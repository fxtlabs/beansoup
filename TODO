====
TODO
====

* Add same-day-merge option to deposit_in_transit plugin

* Write utilities for merging tags and links (to avoid having to deal with
  their None value)

* Figure out a way to disable the deposit_in_transit plugin during import.
  I do not want it to merge same-day cleared transactions; otherwise, the
  transaction completer may fail to choose the proper accounts!

* Write auto_close plugin to close any account (still open) that has not seen
  any activity in the past X days
  Trivial using beancount.core.getters.get_accounts_use_map
  (see auto_accounts plugin for an example)
  Not sure how usuful this plugin would be; the reports already exclude
  accounts that have no activity for the period covered.
  Maybe the plugin could just warn the user that there are accounts that
  could be closed and could show the last used dates.
  (see nounused plugin for an example of error reporting)
  
* Sort rows by date at the beginning of sort_rows().
  May add option to disable the fancy sorting and only decide whether to
  reverse the list of not (still checking the balance values)

* Move transactions.py to importers/filters/completion.py

* Should importers/filters/__init__.py import all filters to expose them
  more conveniently (e.g.
  from beansoup.importers import filters
  then filters.Completion, filters.Whatever
  instead of
  from beansoup.importers.filters import completion, whatever
  then completion.Completion, whatever.Whatever or
  completion.Filter, whatever.Filter)

* Consider adding an option to transaction completer to add posting for
  all matching accounts even though they would not balance

* Allow transaction completer to look at alternative accounts for matches
  (e.g. completing a transaction from a Visa statement could also look at
  transactions involving an Amex card since you may have charged for the
  same payee on one card or the other)
  Matches in alternative accounts would have a smaller score

* Improve the narrative similarity algorithm used by transaction completer
  Try something from difflib:
  difflib.SequenceMatcher(lambda x: x == ' ', 'string1', 'string2').ratio()
  Or try Levenshtein distance
  https://pypi.python.org/pypi/python-Levenshtein/0.12.0
  distance(), ratio(), and jaro_winkler() look interesting
  Probably best to lowercase everything before
  http://stackoverflow.com/questions/6690739/fuzzy-string-comparison-in-python-confused-with-which-library-to-use
  http://chairnerd.seatgeek.com/fuzzywuzzy-fuzzy-string-matching-in-python/
  https://github.com/seatgeek/fuzzywuzzy
  https://marcobonzanini.com/2015/02/25/fuzzy-string-matching-in-python/
  https://pypi.python.org/pypi/Distance/
  
* Add a customizable normalization step on the imported narration and
  existing narrations to improve robustness of similarity measure.
  For example, the zip-like electronic transfer code at the end of some TD
  entries could be normalized to A1B2C3.
  Maybe use a normalization dict to map accounts to normalization callables.

* Maybe ignored_tag of clear_transactions plugin should be a regexp

* Finish clear_transactions plugin; add documentation and example

* Should clear_transactions plugin be able to print out pending transactions?

* Should I turn sort_docs plugin into a general sort_order plugin?
  Martin would not like that

* Mark beansoup.plugins.sort_docs as deprecated or remove it altogether

* Write OFX importer (banking only?) that can name files according to the
  billing period

* Write tests for everything

* Consider adding examples

* Should I write a plugin to support annotating transactions with doc:?

