====
TODO
====

* Add function to build a period given the starting date

* Add iterator over periods
  def count(start=date):
    while True:
        yield n
        n += ...

* TD parse needs to be cachable, so it cannot use info from the beancount
  account to figure out the sign of balance

* Factor td.Importer into a csv.Importer and a specialization for TD.

* beansoup.importers.td.Importer should output one balance directive per
  month when a file spans several monthly periods.
  I have yearly statement files for old data, but I would still like to
  generate monthly balance directives.

* Make beansoup.importers.td.Importer extracted balance more robust.
  When the CSV records all have the same date, it is not clear whether
  they are in ascending or descending chronological order and therefore it
  is not clear whether to use the first or last record for the balance amount.

* Rename period.py to periods.py

* Move transactions.py to importers/filters/completion.py

* Should importers/filters/__init__.py import all filters to expose them
  more conveniently (e.g.
  from beansoup.importers import filters
  then filters.Completion, filters.Whatever
  instead of
  from beansoup.importers.filters import completion, whatever
  then completion.Completion, whatever.Whatever or
  completion.Filter, whatever.Filter)

* Consider adding an option to transaction completer to add posting for
  all matching accounts even though they would not balance

* Allow transaction completer to look at alternative accounts for matches
  (e.g. completing a transaction from a Visa statement could also look at
  transactions involving an Amex card since you may have charged for the
  same payee on one card or the other)
  Matches in alternative accounts would have a smaller score

* Improve the narrative similarity algorithm used by transaction completer
  Try something from difflib:
  difflib.SequenceMatcher(lambda x: x == ' ', 'string1', 'string2').ratio()
  Or try Levenshtein distance
  https://pypi.python.org/pypi/python-Levenshtein/0.12.0
  distance(), ratio(), and jaro_winkler() look interesting
  Probably best to lowercase everything before
  http://stackoverflow.com/questions/6690739/fuzzy-string-comparison-in-python-confused-with-which-library-to-use
  http://chairnerd.seatgeek.com/fuzzywuzzy-fuzzy-string-matching-in-python/
  https://github.com/seatgeek/fuzzywuzzy
  https://marcobonzanini.com/2015/02/25/fuzzy-string-matching-in-python/
  https://pypi.python.org/pypi/Distance/
  
* Add a customizable normalization step on the imported narration and
  existing narrations to improve robustness of similarity measure.
  For example, the zip-like electronic transfer code at the end of some TD
  entries could be normalized to A1B2C3.
  Maybe use a normalization dict to map accounts to normalization callables.

* Maybe ignored_tag of clear_transactions plugin should be a regexp

* Finish clear_transactions plugin; add documentation and example

* Should clear_transactions plugin be able to print out pending transactions?

* Should I turn sort_docs plugin into a general sort_order plugin?
  Martin would not like that

* Mark beansoup.plugins.sort_docs as deprecated or remove it altogether

* Write OFX importer (banking only?) that can name files according to the
  billing period

* Write tests for everything

* Consider adding examples

